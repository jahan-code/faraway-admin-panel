name: Build Tauri (Windows)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
    paths:
      - 'src-tauri/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'package-lock.json'
      - 'yarn.lock'
      - 'next.config.*'
      - 'src/**'

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      NODE_OPTIONS: --max-old-space-size=4096
      NEXT_TELEMETRY_DISABLED: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust (stable MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js
        run: npm run build

      - name: Assemble Next standalone into Tauri resources
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p src-tauri/resources/server/standalone
          mkdir -p src-tauri/resources/server/.next/static
          mkdir -p src-tauri/resources/server/public
          # Copy standalone server bundle
          rsync -a --delete .next/standalone/ src-tauri/resources/server/standalone/
          # Copy static assets expected by server
          rsync -a --delete .next/static/ src-tauri/resources/server/.next/static/
          # Copy public assets
          if [ -d public ]; then rsync -a --delete public/ src-tauri/resources/server/public/; fi
          # Create a lightweight launcher that defers to standalone/server.js
          cat > src-tauri/resources/server/server.js << 'EOF'
          // Launcher for Next standalone in Tauri sidecar
          const path = require('path');
          const { spawn } = require('child_process');
          const PORT = process.env.PORT || '5173';
          const HOSTNAME = process.env.HOSTNAME || '127.0.0.1';
          // Execute the standalone server.js in-process
          require(path.join(__dirname, 'standalone', 'server.js'));
          EOF

      - name: Build Tauri (Windows)
        run: npx tauri build

      - name: Upload bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows-bundle
          path: |
            src-tauri/target/release/bundle/**
          if-no-files-found: warn
